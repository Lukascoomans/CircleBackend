// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using circle_backend;

namespace circle_backend.Migrations
{
    [DbContext(typeof(CircleDbContext))]
    [Migration("20190406231520_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("circle_backend.Models.DrawingMessage", b =>
                {
                    b.Property<int>("DrawId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Drawing");

                    b.Property<int>("FromUser");

                    b.Property<int?>("SessionId");

                    b.Property<int>("ToUser");

                    b.HasKey("DrawId");

                    b.HasIndex("SessionId");

                    b.ToTable("DrawingMessage");
                });

            modelBuilder.Entity("circle_backend.Models.Session", b =>
                {
                    b.Property<int>("SessionId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .HasMaxLength(4);

                    b.Property<bool>("HasStarted");

                    b.HasKey("SessionId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("circle_backend.Models.TextMessage", b =>
                {
                    b.Property<int>("TextId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FromUser");

                    b.Property<string>("Message");

                    b.Property<int?>("SessionId");

                    b.Property<int>("ToUser");

                    b.HasKey("TextId");

                    b.HasIndex("SessionId");

                    b.ToTable("TextMessage");
                });

            modelBuilder.Entity("circle_backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<bool>("Ready");

                    b.Property<int>("SessionId");

                    b.Property<bool>("TurnComplete");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("circle_backend.Models.DrawingMessage", b =>
                {
                    b.HasOne("circle_backend.Models.Session")
                        .WithMany("DrawingMessages")
                        .HasForeignKey("SessionId");
                });

            modelBuilder.Entity("circle_backend.Models.TextMessage", b =>
                {
                    b.HasOne("circle_backend.Models.Session")
                        .WithMany("TextMessages")
                        .HasForeignKey("SessionId");
                });
#pragma warning restore 612, 618
        }
    }
}
